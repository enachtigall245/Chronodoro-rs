name: build-linux
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -C target-cpu=x86-64-v2
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install system deps (ALSA/X11)
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config \
            libx11-dev libasound2-dev \
            libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Build (release)
        run: cargo build --release

      - name: Prepare artifact
        run: |
          mkdir -p dist
          cp target/release/chronodoro dist/chronodoro
          chmod +x dist/portable_pomodoro
          # Pre-seed config if not present
          [ -f pomodoro_config.json ] && cp pomodoro_config.json dist/ || cat > dist/pomodoro_config.json <<'JSON'
          {
            "focus_minutes": 25,
            "short_break_minutes": 5,
            "long_break_minutes": 15,
            "sessions_until_long_break": 4,
            "auto_start_next": false
          }
          JSON
          echo "Chronodoro (Linux) â€” run the binary directly." > dist/README.txt

      - name: Upload artifact (folder; upload-artifact will zip it)
        uses: actions/upload-artifact@v4
        with:
          name: chronodoro-linux
          path: dist


